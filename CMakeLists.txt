PROJECT(AZPAZETATMX C CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(HAIKU_BACKEND OFF CACHE BOOL "Build Haiku backend")
SET(QT_BACKEND OFF CACHE BOOL "Build QT backend")
SET(X11_BACKEND OFF CACHE BOOL "Build X11 backend")
SET(SDL_BACKEND OFF CACHE BOOL "Build SDL backend")
SET(GTK_BACKEND OFF CACHE BOOL "Build GTK backend")
SET(WX_BACKEND OFF CACHE BOOL "Build wxWidgets backend")

FIND_PACKAGE(OpenGL)
INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})

FILE(GLOB COMMON_SRC "${PROJECT_SOURCE_DIR}/lib/*.cpp")
ADD_LIBRARY(AZPAZETATMX_GL STATIC ${COMMON_SRC})

IF(HAIKU_BACKEND)
	FILE(GLOB HAIKU_SRC ${CMAKE_CURRENT_SOURCE_DIR}/haiku "*.cpp")
	ADD_EXECUTABLE(AZPAZETATMX_HAIKU ${HAIKU_SRC})
	TARGET_LINK_LIBRARIES(AZPAZETATMX_HAIKU be tracker root ${AZPAZETATMX_GL} ${OPENGL_LIBRARIES})
ENDIF()

IF(QT_BACKEND)
	FIND_PACKAGE(Qt REQUIRED QtGui QtOpenGL)
	SET(QT_USE_QTOPENGL TRUE)
	include(${QT_USE_FILE})
	INCLUDE_DIRECTORIES(${QT_QTCORE_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${QT_QTGUI_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${QT_QTOPENGL_INCLUDE_DIR})
	INCLUDE_DIRECTORIES(${QT_INCLUDE_DIR})
	FILE(GLOB QT_SRC "${CMAKE_CURRENT_SOURCE_DIR}/qt/*.cpp")
	ADD_EXECUTABLE(AZPAZETATMX_QT ${QT_SRC})
	TARGET_LINK_LIBRARIES(AZPAZETATMX_QT AZPAZETATMX_GL ${OPENGL_LIBRARIES} Qt4::QtGui Qt4::QtOpenGL)
ENDIF()

IF(X11_BACKEND)
	FIND_PACKAGE(X11)
	INCLUDE_DIRECTORIES(${X11_INCLUDE_DIR})
	FILE(GLOB X11_SRC "${CMAKE_CURRENT_SOURCE_DIR}/x11/*.cpp")
	ADD_EXECUTABLE(AZPAZETATMX_X11 ${X11_SRC})
	TARGET_LINK_LIBRARIES(AZPAZETATMX_X11 AZPAZETATMX_GL ${OPENGL_LIBRARIES} ${X11_LIBRARIES})
ENDIF()
